i=3;dev.set(2);plot_epoch_resp(i);dev.set(3);plot_epoch_resp(i+10)
i=4;dev.set(2);plot_epoch_resp(i);dev.set(3);plot_epoch_resp(i+10)
i=5;dev.set(2);plot_epoch_resp(i);dev.set(3);plot_epoch_resp(i+10)
i=6;dev.set(2);plot_epoch_resp(i);dev.set(3);plot_epoch_resp(i+10)
i=7;dev.set(2);plot_epoch_resp(i);dev.set(3);plot_epoch_resp(i+10)
i=8;dev.set(2);plot_epoch_resp(i);dev.set(3);plot_epoch_resp(i+10)
i=9;dev.set(2);plot_epoch_resp(i);dev.set(3);plot_epoch_resp(i+10)
i=10;dev.set(2);plot_epoch_resp(i);dev.set(3);plot_epoch_resp(i+10)
epochs
quit()
342/31
31/342
359/581
366/579
327/509
266/461
206/461
141/348
100/291
90/259
source("tuning_vol.R")
source("tuning_vol.R")
source("tuning_vol.R")
sizeList
sizeList[[1]]
source("tuning_vol.R")
i
sizes
str(sizeList)
fivedeg
source("tuning_vol.R")
x<-(sizeList[[2]]-sizeList[[i]])/(sizeList[[2]]+sizeList[[i]])
x<-(sizeList[[1]]-sizeList[[i]])/(sizeList[[1]]+sizeList[[i]])
head(x)
sizes
EPlist
str(sizeList[[2]])
str(sizeList[[i]])
str(sizeList[[1]])
sizeList[[1]][1,]
sizeList[[2]][1,]
outputRCT[1,]
outputRCT[2,]
outputRCT[3,]
outputCT[3,]
output[3,]
head(output)
head(outputRCT)
slice2<-read.table("/media//meyer-lab/Elements/Work/Stimulus_Barrage/barrage_v2/H2Bslow/180727_PVN_barrage4_v10_F1_1/results_toolbox/180727_PVN_barrage4_v10_F1_1_rslice2_output_rawCT.dat")
head(slice2)
slice3<-read.table("/media//meyer-lab/Elements/Work/Stimulus_Barrage/barrage_v2/H2Bslow/180727_PVN_barrage4_v10_F1_1/results_toolbox/180727_PVN_barrage4_v10_F1_1_rslice3_output_rawCT.dat")
head(slice3)
slice4<-read.table("/media//meyer-lab/Elements/Work/Stimulus_Barrage/barrage_v2/H2Bslow/180727_PVN_barrage4_v10_F1_1/results_toolbox/180727_PVN_barrage4_v10_F1_1_rslice4_output_rawCT.dat")
head(slice4)
for (i in 5:10) {paste("slice",i,sep="")<-paste("/media//meyer-lab/Elements/Work/Stimulus_Barrage/barrage_v2/H2Bslow/180727_PVN_barrage4_v10_F1_1/results_toolbox/180727_PVN_barrage4_v10_F1_1_rslice",i,"_output_rawCT.dat",sep="")}
for (i in 5:10) {(paste("slice",i,sep=""))<-(paste("/media//meyer-lab/Elements/Work/Stimulus_Barrage/barrage_v2/H2Bslow/180727_PVN_barrage4_v10_F1_1/results_toolbox/180727_PVN_barrage4_v10_F1_1_rslice",i,"_output_rawCT.dat",sep=""))}
for (i in 5:10) {<-(paste("/media//meyer-lab/Elements/Work/Stimulus_Barrage/barrage_v2/H2Bslow/180727_PVN_barrage4_v10_F1_1/results_toolbox/180727_PVN_barrage4_v10_F1_1_rslice",i,"_output_rawCT.dat",sep=""))}
2
3
4
5
6
slice5<-read.table("/media//meyer-lab/Elements/Work/Stimulus_Barrage/barrage_v2/H2Bslow/180727_PVN_barrage4_v10_F1_1/results_toolbox/180727_PVN_barrage4_v10_F1_1_rslice5_output_rawCT.dat")
slice6<-read.table("/media//meyer-lab/Elements/Work/Stimulus_Barrage/barrage_v2/H2Bslow/180727_PVN_barrage4_v10_F1_1/results_toolbox/180727_PVN_barrage4_v10_F1_1_rslice6_output_rawCT.dat")
slice7<-read.table("/media//meyer-lab/Elements/Work/Stimulus_Barrage/barrage_v2/H2Bslow/180727_PVN_barrage4_v10_F1_1/results_toolbox/180727_PVN_barrage4_v10_F1_1_rslice7_output_rawCT.dat")
slice8<-read.table("/media//meyer-lab/Elements/Work/Stimulus_Barrage/barrage_v2/H2Bslow/180727_PVN_barrage4_v10_F1_1/results_toolbox/180727_PVN_barrage4_v10_F1_1_rslice8_output_rawCT.dat")
slice9<-read.table("/media//meyer-lab/Elements/Work/Stimulus_Barrage/barrage_v2/H2Bslow/180727_PVN_barrage4_v10_F1_1/results_toolbox/180727_PVN_barrage4_v10_F1_1_rslice9_output_rawCT.dat")
slice10<-read.table("/media//meyer-lab/Elements/Work/Stimulus_Barrage/barrage_v2/H2Bslow/180727_PVN_barrage4_v10_F1_1/results_toolbox/180727_PVN_barrage4_v10_F1_1_rslice10_output_rawCT.dat")
head(slice5)
head(slice6)
head(slice7)
head(slice8)
head(slice9)
head(slice10)
head(slice2)
nrow(slice2)
slice2<-read.table("/media//meyer-lab/Elements/Work/Stimulus_Barrage/barrage_v2/H2Bslow/180727_PVN_barrage4_v10_F1_1/results_toolbox/180727_PVN_barrage4_v10_F1_1_rslice2_output_rawCT.dat")
head(slice2)
source("tuning_vol.R")
head(outputRCT)
head(sizeList[[2]])
head(sizeList[[1]])
grepl("DOT",epochs)&grepl(sizes[i],epochs)
grepl("DOT",epochs)&grepl(sizes[i],epochs)+2
head(sizeList[[1]])
nrow(outputRCT)
ncol(outputRCT)
c("FALSE","FALSE",grepl("DOT",epochs)&grepl(sizes[i],epochs))
logical("FALSE","FALSE",grepl("DOT",epochs)&grepl(sizes[i],epochs))
as.logical(c("FALSE","FALSE",grepl("DOT",epochs)&grepl(sizes[i],epochs)))
source("tuning.R")
head(sizeList[[1]])
plot_sizeselec()
X11();X11()
source("tuning.R")
X11();X11()
plot_sizeselec()
plot_sizeselec()
source("tuning_vol.R")
plot_sizeselec()
plot_cell(1)
plot_cell(500)
outputRCT[1,]
outputRCT[1:!0,]
outputRCT[1:10,]
outputRCT[200:220,]
outputRCT[200:210,]
outputRCT[400:410,]
outputRCT[300:310,]
outputRCT[350:360,]
outputRCT[370:380,]
outputRCT[360:370,]
outputRCT[350:360,]
slice=4
outputRCT[slice-1,]
outputRCT[,]
which(x=1)
quit()
source("tuning_vol.R")
source("tuning_vol.R")
source("tuning_vol.R")
which(outputRCT[,1]==3)
which(outputRCT[,1]==4)
which(outputRCT[,1]==1)
max(which(outputRCT[,1]==1))
max(which(outputRCT[,1]==1))
which(outputRCT[,1]==1)
which(outputRCT[,1]==2)
which(outputRCT[,1]==3)
max(which(outputRCT[,1]==3))
row
rowNum<-outputRCT[4,1]
slice<-outputRCT[4,1]
slice
max(which(outputRCT[,1]==slice-1))
max(which(outputRCT[,1]==slice-1)
)
max(which(outputRCT[,1]==(slice-1))
)
slice<-outputRCT[458,1]
slice
max(which(outputRCT[,1]==(slice-1))
)
max(which(outputRCT[,1]==(slice-1)))
max(which(outputRCT[,1]==slice-1))
outputRCT[358:360,]
max(which(outputRCT[,1]==slice-1))
subtract<-max(which(outputRCT[,1]==slice-1))
subtract
outputRCT[subtract,]
outputRCT[subtract,2]
rowNum=360
    slice<-outputRCT[rowNum,1]
slice
    subtract<-max(which(outputRCT[,1]==slice-1))
subtract
outputRCT[rowNum,2]
outputRCT[rowNum,]
outputRCT[rowNum,2]
outputRCT[rowNum,2]-subtract
outputRCT[subtract,2]
outputRCT[rowNum,2]-outputRCT[subtract,2]
outputRCT[rowNum,2]-outputRCT[subtract,2]-1
outputRCT[rowNum,2]-outputRCT[subtract,2]
source("tuning.R")
plot_cell(0)
plot_cell(1)
cell<-function(rowNum){
    slice<-outputRCT[rowNum,1]
    subtract<-max(which(outputRCT[,1]==slice-1))
    cellID<-outputRCT[rowNum,2]-outputRCT[subtract,2]
    return(cellID)
}
cell(459)
cell(600)
rowNum<-600
cell<-function(as.numeric(rowNum)){
    slice<-outputRCT[rowNum,1]
    subtract<-max(which(outputRCT[,1]==slice-1))
    cellID<-outputRCT[rowNum,2]-outputRCT[subtract,2]
    return(cellID)
}
cell<-function(rowNum){
    rowNum<-as.numeric(rowNum)
    slice<-outputRCT[rowNum,1]
    subtract<-max(which(outputRCT[,1]==slice-1))
    cellID<-outputRCT[rowNum,2]-outputRCT[subtract,2]
    return(cellID)
}
cell(600)
cell<-function(rowNum){
    rowNum<-as.numeric(rowNum)
    print(rowNum)
    slice<-outputRCT[rowNum,1]
    subtract<-max(which(outputRCT[,1]==slice-1))
    cellID<-outputRCT[rowNum,2]-outputRCT[subtract,2]
    return(cellID)
}
cell(600)
cell<-function(rowNum){
    rowNum<-as.numeric(rowNum)
    print(rowNum)
    slice<-outputRCT[rowNum,1]
    print(slice)
    subtract<-max(which(outputRCT[,1]==slice-1))
    cellID<-outputRCT[rowNum,2]-outputRCT[subtract,2]
    return(cellID)
}
cell(600)
rowNum<-600
  rowNum<-as.numeric(rowNum)
    print(rowNum)
    slice<-outputRCT[rowNum,1]
    print(slice)
slice
outputRCT[rowNum,1]
rowNum
outputRCT[600,1]
nrow(outputRCT)
source("tuning_vol.R")
cell<-function(rowNum){
    rowNum<-as.numeric(rowNum)
    print(rowNum)
    slice<-outputRCT[rowNum,1]
    print(slice)
    subtract<-max(which(outputRCT[,1]==slice-1))
    cellID<-outputRCT[rowNum,2]-outputRCT[subtract,2]
    return(cellID)
}
cell(600)
cell(1)
min(outputRCT[1,]
)
min(outputRCT[2,])
min(outputRCT[3,])
min(outputRCT[,1])
rowNum
slice
slice=3
!slice == min(outputRCT[,1]
!(slice == min(outputRCT[,1])
)
!slice == min(outputRCT[,1])
slice == min(outputRCT[,1])
cell<-function(rowNum){
    rowNum<-as.numeric(rowNum)
    print(rowNum)
    slice<-outputRCT[rowNum,1]
    print(slice)
    if !slice == min(outputRCT[,1]){
        subtract<-max(which(outputRCT[,1]==slice-1))
        cellID<-outputRCT[rowNum,2]-outputRCT[subtract,2]
    }else{
        cellID<-outputRCT[rowNum,2]
    }
    return(cellID)
}
cell<-function(rowNum){
    rowNum<-as.numeric(rowNum)
    print(rowNum)
    slice<-outputRCT[rowNum,1]
    print(slice)
    if (!slice == min(outputRCT[,1])){
        subtract<-max(which(outputRCT[,1]==slice-1))
        cellID<-outputRCT[rowNum,2]-outputRCT[subtract,2]
    }else{
        cellID<-outputRCT[rowNum,2]
    }
    return(cellID)
}
cell(1)
cell(2)
cell(3)
cell<-function(rowNum){
    rowNum<-as.numeric(rowNum)
    print(rowNum)
    slice<-outputRCT[rowNum,1]
    print(slice)
    if (!slice == min(outputRCT[,1])){
        subtract<-max(which(outputRCT[,1]==slice-1))
        cellID<-outputRCT[rowNum,2]-outputRCT[subtract,2]
    }else{
        cellID<-outputRCT[rowNum,2]+1
    }
    return(cellID)
}
cell(1)
cell(600)
outputRCT[369,]
outputRCT[358:360,]
#We need to calculate the cell IDs for each slice, as the combined output only has a culmulative count of all cells
cell<-function(rowNum){
    rowNum<-as.numeric(rowNum)
    slice<-outputRCT[rowNum,1]
    print(slice)
    if (!slice == min(outputRCT[,1])){
        subtract<-max(which(outputRCT[,1]==slice-1))
        cellID<-outputRCT[rowNum,2]-outputRCT[subtract,2]
#the cell ID for the most ventral slice is just the cumulative cell ID
    }else{
        cellID<-outputRCT[rowNum,2]+1
    }
    return(cellID)
}
cell(489)
nrow(outputRCT)
cell(1855)
callFun<-function(){
    cell(489)
    print(slice)
    print(cellID)
}   
callFun
callFun()
cell<-function(rowNum){
    rowNum<-as.numeric(rowNum)
    slice<-outputRCT[rowNum,1]
#   print(slice)
    if (!slice == min(outputRCT[,1])){
        subtract<-max(which(outputRCT[,1]==slice-1))
        cellID<-outputRCT[rowNum,2]-outputRCT[subtract,2]
#the cell ID for the most ventral slice is just the cumulative cell ID
    }else{
        cellID<-outputRCT[rowNum,2]+1
    }
    return(cellID)
}
callFun<-function(){
    cell(489)
    print(slice)
    print(cellID)
}   
callFun()
cell(489)
cellID
slice
cellIF
cellID
list(cellID,slice)
cell<-function(rowNum){
    rowNum<-as.numeric(rowNum)
    slice<-outputRCT[rowNum,1]
#   print(slice)
    if (!slice == min(outputRCT[,1])){
        subtract<-max(which(outputRCT[,1]==slice-1))
        cellID<-outputRCT[rowNum,2]-outputRCT[subtract,2]
#the cell ID for the most ventral slice is just the cumulative cell ID
    }else{
        cellID<-outputRCT[rowNum,2]+1
    }
    returnList<-list(slice,cellID)
    return(returnList)
}
param<-cell(469)
param
param<-cell(469)
param
str(param)
  returnList<-list("slice"=slice,"cellID"=cellID)
returnList
cell<-function(rowNum){
    rowNum<-as.numeric(rowNum)
    slice<-outputRCT[rowNum,1]
#   print(slice)
    if (!slice == min(outputRCT[,1])){
        subtract<-max(which(outputRCT[,1]==slice-1))
        cellID<-outputRCT[rowNum,2]-outputRCT[subtract,2]
#the cell ID for the most ventral slice is just the cumulative cell ID
    }else{
        cellID<-outputRCT[rowNum,2]+1
    }
    returnList<-list("slice"=slice,"cellID"=cellID)
    return(returnList)
}
param<-cell(469)
param
folder
prefix
param$slice
    slice<-paste("_rslice",param$slice,sep"")
slice<-paste("_rslice",param$slice,sep="")
slice
plot_cell <- function(id,xmax=100000){
    param<-cell(id)
    slice<-paste("_rslice",param$slice,sep="")
    par(mar=c(8,3,2,1))
    system(paste("/home/meyer-lab/ToolBox_v3.6/bin/read"," ",param$cellID," ",folder,slice,sep=""));
    t<-read.table("out_resp.dat")$V1;
    system(paste("/home/meyer-lab/ToolBox_v3.6/bin/detrend out_resp.dat out_dt.dat",length(t),"20 5"));
    t_dt<-read.table("out_dt.dat")$V1;
    plot((t_dt),type='l',ylim=(c(0,max(t_dt))),main=paste(prefix,id),xaxt='n',ann=F);
    axis(1,at=ep$V1[1:nEP*2-1],label=ep$V2[1:nEP*2-1],las=2)
    rect(xleft=ep$V1[1:nEP *2 -1],xright=ep$V1[1:nEP *2 ],ybottom=rep(-1000,nEP*2),ytop=rep(xmax,nEP*2),col=rgb(0,1,0,.05))
}
plot_cell(469)
plot_cell(1000)
print(param)
plot_cell <- function(id,xmax=100000){
    param<-cell(id)
    print(param)
    slice<-paste("_rslice",param$slice,sep="")
    par(mar=c(8,3,2,1))
    system(paste("/home/meyer-lab/ToolBox_v3.6/bin/read"," ",param$cellID," ",folder,slice,sep=""));
    t<-read.table("out_resp.dat")$V1;
    system(paste("/home/meyer-lab/ToolBox_v3.6/bin/detrend out_resp.dat out_dt.dat",length(t),"20 5"));
    t_dt<-read.table("out_dt.dat")$V1;
    plot((t_dt),type='l',ylim=(c(0,max(t_dt))),main=paste(prefix,id),xaxt='n',ann=F);
    axis(1,at=ep$V1[1:nEP*2-1],label=ep$V2[1:nEP*2-1],las=2)
    rect(xleft=ep$V1[1:nEP *2 -1],xright=ep$V1[1:nEP *2 ],ybottom=rep(-1000,nEP*2),ytop=rep(xmax,nEP*2),col=rgb(0,1,0,.05))
}
plot_cell(5)
plot_cell(1)
plot_cell(0)
plot_cell(1)
plot_cell(4)
param<-cell(1000)
param
plot_cell(1000)
plot_cell(2000)
plot_cell(1200)
plot_cell(600)
plot_dotselec()
source("tuning_vol.R")
plot_dotselec()
source("tuning_vol.R")
plot_dotselec()
source("tuning_vol.R")
plot_dotselec()
source("tuning_vol.R")
plot_dotselec()
plot_global()
source("tuning_vol.R")
plot_global()
source("tuning_vol.R")
plot_global()
source("tuning_vol.R")
plot_global()
plot_corr()
plot_hist_resp()
source("tuning_vol.R")
EPlength<-read.table(paste(folder,"_rslice10_EPtimeC.dat",sep=""))
EPlength
source("tuning_vol.R")
source("tuning_vol.R")
EPlength
plot_hist_resp()
 outputnorm<-outputRCT
    for (i in 3:ncol(outputRCT)) outputnorm[,i]<-outputRCT[,i]/EPlength[i-1];
    par(mfrow=c(5,4));
for (i in 3:ncol(outputRCT)){
        hist(outputnorm[,i],main=epochs[i-1],xlim=c(0,60),ylim=c(0,250),breaks=seq(min(outputnorm[,3:ncol(outputnorm)]),max(outputnorm[,3:ncol(outputnorm)]),l=30))
    }
head(outputnorm)
source("tuning_vol.R")
plot_hist_resp()
source("tuning_vol.R")
plot_hist_resp()
plot_sizeselec()
source("tuning_vol.R")
plot_sizeselec()
source("tuning_vol.R")
plot_sizeselec()
source("tuning_vol.R")
plot_sizeselec()
source("tuning_vol.R")
plot_sizeselec()
source("tuning_vol.R")
plot_sizeselec()
plot_tuning(1)
source("tuning_vol.R")
plot_tuning(1)
source("tuning_vol.R")
plot_tuning(1)
plot_tuning(2)
plot_tuning(1)
X11();plot_cell(1)
X11();plot_cell(1000)
plot_tuning(1000)
nrow(outputRCT)
plot_tuning(1855)
plot_tuning(855)
plot_tuning(955)
plot_tuning(955)
plot_tuning(1)
EPlist
plot_tuning(1)
plot_cell(1)
plot_cell(1000)
X11();par(mfrow=c(4,2));for (i in 1:8) plot_cell(i)
X11();par(mfrow=c(4,2));for (i in 9:16) plot_cell(i)
for (i in 17:24) plot_cell(i)
for (i in 25:32) plot_cell(i)
X11();plot_tuning(28)
plot_tuning(1)
plot_tuning(2)
for (i in 100:107) plot_cell(i)
for (i in 100:107) plot_cell(i)
for (i in 200:207) plot_cell(i)
for (i in 300:307) plot_cell(i)
for (i in 400:407) plot_cell(i)
for (i in 700:707) plot_cell(i)
for (i in 800:807) plot_cell(i)
for (i in 900:907) plot_cell(i)
for (i in 1200:1207) plot_cell(i)
nrow(outputRCT)
for (i in 1800:1807) plot_cell(i)
for (i in 1700:1707) plot_cell(i)
for (i in 1750:1757) plot_cell(i)
for (i in 1770:1777) plot_cell(i)
pre
prefix
quit()
